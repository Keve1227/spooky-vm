tokens {
  kind: EXTERN
  position {
    line: 1
    col: 1
  }
  text: "extern"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 1
    col: 8
    offset: 7
  }
  text: "printInt"
}
tokens {
  kind: LPAREN
  position {
    line: 1
    col: 16
    offset: 15
  }
  text: "("
}
tokens {
  kind: IDENTIFIER
  position {
    line: 1
    col: 17
    offset: 16
  }
  text: "i"
}
tokens {
  kind: COLON
  position {
    line: 1
    col: 18
    offset: 17
  }
  text: ":"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 1
    col: 20
    offset: 19
  }
  text: "Int"
}
tokens {
  kind: RPAREN
  position {
    line: 1
    col: 23
    offset: 22
  }
  text: ")"
}
tokens {
  kind: EXTERN
  position {
    line: 2
    col: 1
    offset: 24
  }
  text: "extern"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 2
    col: 8
    offset: 31
  }
  text: "print"
}
tokens {
  kind: LPAREN
  position {
    line: 2
    col: 13
    offset: 36
  }
  text: "("
}
tokens {
  kind: IDENTIFIER
  position {
    line: 2
    col: 14
    offset: 37
  }
  text: "ch"
}
tokens {
  kind: COLON
  position {
    line: 2
    col: 16
    offset: 39
  }
  text: ":"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 2
    col: 18
    offset: 41
  }
  text: "Char"
}
tokens {
  kind: RPAREN
  position {
    line: 2
    col: 22
    offset: 45
  }
  text: ")"
}
tokens {
  kind: FUNC
  position {
    line: 4
    col: 1
    offset: 48
  }
  text: "func"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 4
    col: 6
    offset: 53
  }
  text: "isPrime"
}
tokens {
  kind: LPAREN
  position {
    line: 4
    col: 13
    offset: 60
  }
  text: "("
}
tokens {
  kind: IDENTIFIER
  position {
    line: 4
    col: 14
    offset: 61
  }
  text: "n"
}
tokens {
  kind: COLON
  position {
    line: 4
    col: 15
    offset: 62
  }
  text: ":"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 4
    col: 17
    offset: 64
  }
  text: "Int"
}
tokens {
  kind: RPAREN
  position {
    line: 4
    col: 20
    offset: 67
  }
  text: ")"
}
tokens {
  kind: ARROW
  position {
    line: 4
    col: 22
    offset: 69
  }
  text: "->"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 4
    col: 25
    offset: 72
  }
  text: "Boolean"
}
tokens {
  kind: LBRACE
  position {
    line: 4
    col: 33
    offset: 80
  }
  text: "{"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 5
    col: 3
    offset: 84
  }
  text: "p"
}
tokens {
  kind: COLON
  position {
    line: 5
    col: 4
    offset: 85
  }
  text: ":"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 5
    col: 6
    offset: 87
  }
  text: "Int"
}
tokens {
  kind: ASSIGN
  position {
    line: 5
    col: 10
    offset: 91
  }
  text: "="
}
tokens {
  kind: INT_LIT
  position {
    line: 5
    col: 12
    offset: 93
  }
  text: "1"
}
tokens {
  kind: SEMICOLON
  position {
    line: 5
    col: 13
    offset: 94
  }
  text: ";"
}
tokens {
  kind: FOR
  position {
    line: 6
    col: 3
    offset: 98
  }
  text: "for"
}
tokens {
  kind: LPAREN
  position {
    line: 6
    col: 7
    offset: 102
  }
  text: "("
}
tokens {
  kind: IDENTIFIER
  position {
    line: 6
    col: 8
    offset: 103
  }
  text: "i"
}
tokens {
  kind: COLON
  position {
    line: 6
    col: 9
    offset: 104
  }
  text: ":"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 6
    col: 11
    offset: 106
  }
  text: "Int"
}
tokens {
  kind: ASSIGN
  position {
    line: 6
    col: 15
    offset: 110
  }
  text: "="
}
tokens {
  kind: INT_LIT
  position {
    line: 6
    col: 17
    offset: 112
  }
  text: "2"
}
tokens {
  kind: SEMICOLON
  position {
    line: 6
    col: 18
    offset: 113
  }
  text: ";"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 6
    col: 20
    offset: 115
  }
  text: "i"
}
tokens {
  kind: ASTERISK
  position {
    line: 6
    col: 22
    offset: 117
  }
  text: "*"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 6
    col: 24
    offset: 119
  }
  text: "i"
}
tokens {
  kind: LESS_EQUALS
  position {
    line: 6
    col: 26
    offset: 121
  }
  text: "<="
}
tokens {
  kind: IDENTIFIER
  position {
    line: 6
    col: 29
    offset: 124
  }
  text: "n"
}
tokens {
  kind: SEMICOLON
  position {
    line: 6
    col: 30
    offset: 125
  }
  text: ";"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 6
    col: 32
    offset: 127
  }
  text: "i"
}
tokens {
  kind: PLUS_EQUALS
  position {
    line: 6
    col: 34
    offset: 129
  }
  text: "+="
}
tokens {
  kind: INT_LIT
  position {
    line: 6
    col: 37
    offset: 132
  }
  text: "1"
}
tokens {
  kind: RPAREN
  position {
    line: 6
    col: 38
    offset: 133
  }
  text: ")"
}
tokens {
  kind: LBRACE
  position {
    line: 6
    col: 40
    offset: 135
  }
  text: "{"
}
tokens {
  kind: IF
  position {
    line: 7
    col: 5
    offset: 141
  }
  text: "if"
}
tokens {
  kind: LPAREN
  position {
    line: 7
    col: 8
    offset: 144
  }
  text: "("
}
tokens {
  kind: IDENTIFIER
  position {
    line: 7
    col: 9
    offset: 145
  }
  text: "n"
}
tokens {
  kind: PERCENT
  position {
    line: 7
    col: 11
    offset: 147
  }
  text: "%"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 7
    col: 13
    offset: 149
  }
  text: "i"
}
tokens {
  kind: EQUALS
  position {
    line: 7
    col: 15
    offset: 151
  }
  text: "=="
}
tokens {
  kind: INT_LIT
  position {
    line: 7
    col: 18
    offset: 154
  }
  text: "0"
}
tokens {
  kind: RPAREN
  position {
    line: 7
    col: 19
    offset: 155
  }
  text: ")"
}
tokens {
  kind: LBRACE
  position {
    line: 7
    col: 21
    offset: 157
  }
  text: "{"
}
tokens {
  kind: RETURN
  position {
    line: 8
    col: 7
    offset: 165
  }
  text: "return"
}
tokens {
  kind: FALSE
  position {
    line: 8
    col: 14
    offset: 172
  }
  text: "false"
}
tokens {
  kind: SEMICOLON
  position {
    line: 8
    col: 19
    offset: 177
  }
  text: ";"
}
tokens {
  kind: RBRACE
  position {
    line: 9
    col: 5
    offset: 183
  }
  text: "}"
}
tokens {
  kind: RBRACE
  position {
    line: 10
    col: 3
    offset: 187
  }
  text: "}"
}
tokens {
  kind: RETURN
  position {
    line: 11
    col: 3
    offset: 191
  }
  text: "return"
}
tokens {
  kind: TRUE
  position {
    line: 11
    col: 10
    offset: 198
  }
  text: "true"
}
tokens {
  kind: SEMICOLON
  position {
    line: 11
    col: 14
    offset: 202
  }
  text: ";"
}
tokens {
  kind: RBRACE
  position {
    line: 12
    col: 1
    offset: 204
  }
  text: "}"
}
tokens {
  kind: FUNC
  position {
    line: 14
    col: 1
    offset: 207
  }
  text: "func"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 14
    col: 6
    offset: 212
  }
  text: "main"
}
tokens {
  kind: LBRACE
  position {
    line: 14
    col: 11
    offset: 217
  }
  text: "{"
}
tokens {
  kind: FOR
  position {
    line: 15
    col: 3
    offset: 221
  }
  text: "for"
}
tokens {
  kind: LPAREN
  position {
    line: 15
    col: 7
    offset: 225
  }
  text: "("
}
tokens {
  kind: IDENTIFIER
  position {
    line: 15
    col: 8
    offset: 226
  }
  text: "n"
}
tokens {
  kind: COLON
  position {
    line: 15
    col: 9
    offset: 227
  }
  text: ":"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 15
    col: 11
    offset: 229
  }
  text: "Int"
}
tokens {
  kind: ASSIGN
  position {
    line: 15
    col: 15
    offset: 233
  }
  text: "="
}
tokens {
  kind: INT_LIT
  position {
    line: 15
    col: 17
    offset: 235
  }
  text: "90"
}
tokens {
  kind: SEMICOLON
  position {
    line: 15
    col: 19
    offset: 237
  }
  text: ";"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 15
    col: 21
    offset: 239
  }
  text: "n"
}
tokens {
  kind: LESS
  position {
    line: 15
    col: 23
    offset: 241
  }
  text: "<"
}
tokens {
  kind: INT_LIT
  position {
    line: 15
    col: 25
    offset: 243
  }
  text: "100"
}
tokens {
  kind: SEMICOLON
  position {
    line: 15
    col: 28
    offset: 246
  }
  text: ";"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 15
    col: 30
    offset: 248
  }
  text: "n"
}
tokens {
  kind: ASSIGN
  position {
    line: 15
    col: 32
    offset: 250
  }
  text: "="
}
tokens {
  kind: IDENTIFIER
  position {
    line: 15
    col: 34
    offset: 252
  }
  text: "n"
}
tokens {
  kind: PLUS
  position {
    line: 15
    col: 36
    offset: 254
  }
  text: "+"
}
tokens {
  kind: INT_LIT
  position {
    line: 15
    col: 38
    offset: 256
  }
  text: "1"
}
tokens {
  kind: RPAREN
  position {
    line: 15
    col: 39
    offset: 257
  }
  text: ")"
}
tokens {
  kind: LBRACE
  position {
    line: 15
    col: 41
    offset: 259
  }
  text: "{"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 16
    col: 5
    offset: 265
  }
  text: "printInt"
}
tokens {
  kind: LPAREN
  position {
    line: 16
    col: 13
    offset: 273
  }
  text: "("
}
tokens {
  kind: IDENTIFIER
  position {
    line: 16
    col: 14
    offset: 274
  }
  text: "n"
}
tokens {
  kind: RPAREN
  position {
    line: 16
    col: 15
    offset: 275
  }
  text: ")"
}
tokens {
  kind: SEMICOLON
  position {
    line: 16
    col: 16
    offset: 276
  }
  text: ";"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 17
    col: 5
    offset: 282
  }
  text: "print"
}
tokens {
  kind: LPAREN
  position {
    line: 17
    col: 10
    offset: 287
  }
  text: "("
}
tokens {
  kind: CHAR_LIT
  position {
    line: 17
    col: 11
    offset: 288
  }
  text: "\' \'"
}
tokens {
  kind: RPAREN
  position {
    line: 17
    col: 14
    offset: 291
  }
  text: ")"
}
tokens {
  kind: SEMICOLON
  position {
    line: 17
    col: 15
    offset: 292
  }
  text: ";"
}
tokens {
  kind: IF
  position {
    line: 18
    col: 5
    offset: 298
  }
  text: "if"
}
tokens {
  kind: LPAREN
  position {
    line: 18
    col: 8
    offset: 301
  }
  text: "("
}
tokens {
  kind: IDENTIFIER
  position {
    line: 18
    col: 9
    offset: 302
  }
  text: "isPrime"
}
tokens {
  kind: LPAREN
  position {
    line: 18
    col: 16
    offset: 309
  }
  text: "("
}
tokens {
  kind: IDENTIFIER
  position {
    line: 18
    col: 17
    offset: 310
  }
  text: "n"
}
tokens {
  kind: RPAREN
  position {
    line: 18
    col: 18
    offset: 311
  }
  text: ")"
}
tokens {
  kind: RPAREN
  position {
    line: 18
    col: 19
    offset: 312
  }
  text: ")"
}
tokens {
  kind: LBRACE
  position {
    line: 18
    col: 21
    offset: 314
  }
  text: "{"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 19
    col: 9
    offset: 324
  }
  text: "printInt"
}
tokens {
  kind: LPAREN
  position {
    line: 19
    col: 17
    offset: 332
  }
  text: "("
}
tokens {
  kind: INT_LIT
  position {
    line: 19
    col: 18
    offset: 333
  }
  text: "1"
}
tokens {
  kind: RPAREN
  position {
    line: 19
    col: 19
    offset: 334
  }
  text: ")"
}
tokens {
  kind: SEMICOLON
  position {
    line: 19
    col: 20
    offset: 335
  }
  text: ";"
}
tokens {
  kind: RBRACE
  position {
    line: 20
    col: 5
    offset: 341
  }
  text: "}"
}
tokens {
  kind: ELSE
  position {
    line: 20
    col: 7
    offset: 343
  }
  text: "else"
}
tokens {
  kind: LBRACE
  position {
    line: 20
    col: 12
    offset: 348
  }
  text: "{"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 21
    col: 9
    offset: 358
  }
  text: "printInt"
}
tokens {
  kind: LPAREN
  position {
    line: 21
    col: 17
    offset: 366
  }
  text: "("
}
tokens {
  kind: INT_LIT
  position {
    line: 21
    col: 18
    offset: 367
  }
  text: "0"
}
tokens {
  kind: RPAREN
  position {
    line: 21
    col: 19
    offset: 368
  }
  text: ")"
}
tokens {
  kind: SEMICOLON
  position {
    line: 21
    col: 20
    offset: 369
  }
  text: ";"
}
tokens {
  kind: RBRACE
  position {
    line: 22
    col: 5
    offset: 375
  }
  text: "}"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 23
    col: 5
    offset: 381
  }
  text: "print"
}
tokens {
  kind: LPAREN
  position {
    line: 23
    col: 10
    offset: 386
  }
  text: "("
}
tokens {
  kind: CHAR_LIT
  position {
    line: 23
    col: 11
    offset: 387
  }
  text: "\'\\n\'"
}
tokens {
  kind: RPAREN
  position {
    line: 23
    col: 15
    offset: 391
  }
  text: ")"
}
tokens {
  kind: SEMICOLON
  position {
    line: 23
    col: 16
    offset: 392
  }
  text: ";"
}
tokens {
  kind: RBRACE
  position {
    line: 24
    col: 3
    offset: 396
  }
  text: "}"
}
tokens {
  kind: RBRACE
  position {
    line: 25
    col: 1
    offset: 398
  }
  text: "}"
}
