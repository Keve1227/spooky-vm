tokens {
  kind: EXTERN
  position {
    line: 1
    col: 1
    end_line: 1
    end_col: 6
    end_offset: 5
  }
  text: "extern"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 1
    col: 8
    offset: 7
    end_line: 1
    end_col: 15
    end_offset: 14
  }
  text: "printInt"
}
tokens {
  kind: LPAREN
  position {
    line: 1
    col: 16
    offset: 15
    end_line: 1
    end_col: 16
    end_offset: 15
  }
  text: "("
}
tokens {
  kind: IDENTIFIER
  position {
    line: 1
    col: 17
    offset: 16
    end_line: 1
    end_col: 17
    end_offset: 16
  }
  text: "i"
}
tokens {
  kind: COLON
  position {
    line: 1
    col: 18
    offset: 17
    end_line: 1
    end_col: 18
    end_offset: 17
  }
  text: ":"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 1
    col: 20
    offset: 19
    end_line: 1
    end_col: 22
    end_offset: 21
  }
  text: "Int"
}
tokens {
  kind: RPAREN
  position {
    line: 1
    col: 23
    offset: 22
    end_line: 1
    end_col: 23
    end_offset: 22
  }
  text: ")"
}
tokens {
  kind: EXTERN
  position {
    line: 2
    col: 1
    offset: 24
    end_line: 2
    end_col: 6
    end_offset: 29
  }
  text: "extern"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 2
    col: 8
    offset: 31
    end_line: 2
    end_col: 12
    end_offset: 35
  }
  text: "print"
}
tokens {
  kind: LPAREN
  position {
    line: 2
    col: 13
    offset: 36
    end_line: 2
    end_col: 13
    end_offset: 36
  }
  text: "("
}
tokens {
  kind: IDENTIFIER
  position {
    line: 2
    col: 14
    offset: 37
    end_line: 2
    end_col: 15
    end_offset: 38
  }
  text: "ch"
}
tokens {
  kind: COLON
  position {
    line: 2
    col: 16
    offset: 39
    end_line: 2
    end_col: 16
    end_offset: 39
  }
  text: ":"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 2
    col: 18
    offset: 41
    end_line: 2
    end_col: 21
    end_offset: 44
  }
  text: "Char"
}
tokens {
  kind: RPAREN
  position {
    line: 2
    col: 22
    offset: 45
    end_line: 2
    end_col: 22
    end_offset: 45
  }
  text: ")"
}
tokens {
  kind: FUNC
  position {
    line: 4
    col: 1
    offset: 48
    end_line: 4
    end_col: 4
    end_offset: 51
  }
  text: "func"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 4
    col: 6
    offset: 53
    end_line: 4
    end_col: 12
    end_offset: 59
  }
  text: "isPrime"
}
tokens {
  kind: LPAREN
  position {
    line: 4
    col: 13
    offset: 60
    end_line: 4
    end_col: 13
    end_offset: 60
  }
  text: "("
}
tokens {
  kind: IDENTIFIER
  position {
    line: 4
    col: 14
    offset: 61
    end_line: 4
    end_col: 14
    end_offset: 61
  }
  text: "n"
}
tokens {
  kind: COLON
  position {
    line: 4
    col: 15
    offset: 62
    end_line: 4
    end_col: 15
    end_offset: 62
  }
  text: ":"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 4
    col: 17
    offset: 64
    end_line: 4
    end_col: 19
    end_offset: 66
  }
  text: "Int"
}
tokens {
  kind: RPAREN
  position {
    line: 4
    col: 20
    offset: 67
    end_line: 4
    end_col: 20
    end_offset: 67
  }
  text: ")"
}
tokens {
  kind: ARROW
  position {
    line: 4
    col: 22
    offset: 69
    end_line: 4
    end_col: 23
    end_offset: 70
  }
  text: "->"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 4
    col: 25
    offset: 72
    end_line: 4
    end_col: 31
    end_offset: 78
  }
  text: "Boolean"
}
tokens {
  kind: LBRACE
  position {
    line: 4
    col: 33
    offset: 80
    end_line: 4
    end_col: 33
    end_offset: 80
  }
  text: "{"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 5
    col: 3
    offset: 84
    end_line: 5
    end_col: 3
    end_offset: 84
  }
  text: "p"
}
tokens {
  kind: COLON
  position {
    line: 5
    col: 4
    offset: 85
    end_line: 5
    end_col: 4
    end_offset: 85
  }
  text: ":"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 5
    col: 6
    offset: 87
    end_line: 5
    end_col: 8
    end_offset: 89
  }
  text: "Int"
}
tokens {
  kind: ASSIGN
  position {
    line: 5
    col: 10
    offset: 91
    end_line: 5
    end_col: 10
    end_offset: 91
  }
  text: "="
}
tokens {
  kind: INT_LIT
  position {
    line: 5
    col: 12
    offset: 93
    end_line: 5
    end_col: 12
    end_offset: 93
  }
  text: "1"
}
tokens {
  kind: SEMICOLON
  position {
    line: 5
    col: 13
    offset: 94
    end_line: 5
    end_col: 13
    end_offset: 94
  }
  text: ";"
}
tokens {
  kind: FOR
  position {
    line: 6
    col: 3
    offset: 98
    end_line: 6
    end_col: 5
    end_offset: 100
  }
  text: "for"
}
tokens {
  kind: LPAREN
  position {
    line: 6
    col: 7
    offset: 102
    end_line: 6
    end_col: 7
    end_offset: 102
  }
  text: "("
}
tokens {
  kind: IDENTIFIER
  position {
    line: 6
    col: 8
    offset: 103
    end_line: 6
    end_col: 8
    end_offset: 103
  }
  text: "i"
}
tokens {
  kind: COLON
  position {
    line: 6
    col: 9
    offset: 104
    end_line: 6
    end_col: 9
    end_offset: 104
  }
  text: ":"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 6
    col: 11
    offset: 106
    end_line: 6
    end_col: 13
    end_offset: 108
  }
  text: "Int"
}
tokens {
  kind: ASSIGN
  position {
    line: 6
    col: 15
    offset: 110
    end_line: 6
    end_col: 15
    end_offset: 110
  }
  text: "="
}
tokens {
  kind: INT_LIT
  position {
    line: 6
    col: 17
    offset: 112
    end_line: 6
    end_col: 17
    end_offset: 112
  }
  text: "2"
}
tokens {
  kind: SEMICOLON
  position {
    line: 6
    col: 18
    offset: 113
    end_line: 6
    end_col: 18
    end_offset: 113
  }
  text: ";"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 6
    col: 20
    offset: 115
    end_line: 6
    end_col: 20
    end_offset: 115
  }
  text: "i"
}
tokens {
  kind: ASTERISK
  position {
    line: 6
    col: 22
    offset: 117
    end_line: 6
    end_col: 22
    end_offset: 117
  }
  text: "*"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 6
    col: 24
    offset: 119
    end_line: 6
    end_col: 24
    end_offset: 119
  }
  text: "i"
}
tokens {
  kind: LESS_EQUALS
  position {
    line: 6
    col: 26
    offset: 121
    end_line: 6
    end_col: 27
    end_offset: 122
  }
  text: "<="
}
tokens {
  kind: IDENTIFIER
  position {
    line: 6
    col: 29
    offset: 124
    end_line: 6
    end_col: 29
    end_offset: 124
  }
  text: "n"
}
tokens {
  kind: SEMICOLON
  position {
    line: 6
    col: 30
    offset: 125
    end_line: 6
    end_col: 30
    end_offset: 125
  }
  text: ";"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 6
    col: 32
    offset: 127
    end_line: 6
    end_col: 32
    end_offset: 127
  }
  text: "i"
}
tokens {
  kind: ASSIGN
  position {
    line: 6
    col: 34
    offset: 129
    end_line: 6
    end_col: 34
    end_offset: 129
  }
  text: "="
}
tokens {
  kind: IDENTIFIER
  position {
    line: 6
    col: 36
    offset: 131
    end_line: 6
    end_col: 36
    end_offset: 131
  }
  text: "i"
}
tokens {
  kind: PLUS
  position {
    line: 6
    col: 38
    offset: 133
    end_line: 6
    end_col: 38
    end_offset: 133
  }
  text: "+"
}
tokens {
  kind: INT_LIT
  position {
    line: 6
    col: 40
    offset: 135
    end_line: 6
    end_col: 40
    end_offset: 135
  }
  text: "1"
}
tokens {
  kind: RPAREN
  position {
    line: 6
    col: 41
    offset: 136
    end_line: 6
    end_col: 41
    end_offset: 136
  }
  text: ")"
}
tokens {
  kind: LBRACE
  position {
    line: 6
    col: 43
    offset: 138
    end_line: 6
    end_col: 43
    end_offset: 138
  }
  text: "{"
}
tokens {
  kind: IF
  position {
    line: 7
    col: 5
    offset: 144
    end_line: 7
    end_col: 6
    end_offset: 145
  }
  text: "if"
}
tokens {
  kind: LPAREN
  position {
    line: 7
    col: 8
    offset: 147
    end_line: 7
    end_col: 8
    end_offset: 147
  }
  text: "("
}
tokens {
  kind: IDENTIFIER
  position {
    line: 7
    col: 9
    offset: 148
    end_line: 7
    end_col: 9
    end_offset: 148
  }
  text: "n"
}
tokens {
  kind: PERCENT
  position {
    line: 7
    col: 11
    offset: 150
    end_line: 7
    end_col: 11
    end_offset: 150
  }
  text: "%"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 7
    col: 13
    offset: 152
    end_line: 7
    end_col: 13
    end_offset: 152
  }
  text: "i"
}
tokens {
  kind: EQUALS
  position {
    line: 7
    col: 15
    offset: 154
    end_line: 7
    end_col: 16
    end_offset: 155
  }
  text: "=="
}
tokens {
  kind: INT_LIT
  position {
    line: 7
    col: 18
    offset: 157
    end_line: 7
    end_col: 18
    end_offset: 157
  }
  text: "0"
}
tokens {
  kind: RPAREN
  position {
    line: 7
    col: 19
    offset: 158
    end_line: 7
    end_col: 19
    end_offset: 158
  }
  text: ")"
}
tokens {
  kind: LBRACE
  position {
    line: 7
    col: 21
    offset: 160
    end_line: 7
    end_col: 21
    end_offset: 160
  }
  text: "{"
}
tokens {
  kind: RETURN
  position {
    line: 8
    col: 7
    offset: 168
    end_line: 8
    end_col: 12
    end_offset: 173
  }
  text: "return"
}
tokens {
  kind: FALSE
  position {
    line: 8
    col: 14
    offset: 175
    end_line: 8
    end_col: 18
    end_offset: 179
  }
  text: "false"
}
tokens {
  kind: SEMICOLON
  position {
    line: 8
    col: 19
    offset: 180
    end_line: 8
    end_col: 19
    end_offset: 180
  }
  text: ";"
}
tokens {
  kind: RBRACE
  position {
    line: 9
    col: 5
    offset: 186
    end_line: 9
    end_col: 5
    end_offset: 186
  }
  text: "}"
}
tokens {
  kind: RBRACE
  position {
    line: 10
    col: 3
    offset: 190
    end_line: 10
    end_col: 3
    end_offset: 190
  }
  text: "}"
}
tokens {
  kind: RETURN
  position {
    line: 11
    col: 3
    offset: 194
    end_line: 11
    end_col: 8
    end_offset: 199
  }
  text: "return"
}
tokens {
  kind: TRUE
  position {
    line: 11
    col: 10
    offset: 201
    end_line: 11
    end_col: 13
    end_offset: 204
  }
  text: "true"
}
tokens {
  kind: SEMICOLON
  position {
    line: 11
    col: 14
    offset: 205
    end_line: 11
    end_col: 14
    end_offset: 205
  }
  text: ";"
}
tokens {
  kind: RBRACE
  position {
    line: 12
    col: 1
    offset: 207
    end_line: 12
    end_col: 1
    end_offset: 207
  }
  text: "}"
}
tokens {
  kind: FUNC
  position {
    line: 14
    col: 1
    offset: 210
    end_line: 14
    end_col: 4
    end_offset: 213
  }
  text: "func"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 14
    col: 6
    offset: 215
    end_line: 14
    end_col: 9
    end_offset: 218
  }
  text: "main"
}
tokens {
  kind: LBRACE
  position {
    line: 14
    col: 11
    offset: 220
    end_line: 14
    end_col: 11
    end_offset: 220
  }
  text: "{"
}
tokens {
  kind: FOR
  position {
    line: 15
    col: 3
    offset: 224
    end_line: 15
    end_col: 5
    end_offset: 226
  }
  text: "for"
}
tokens {
  kind: LPAREN
  position {
    line: 15
    col: 7
    offset: 228
    end_line: 15
    end_col: 7
    end_offset: 228
  }
  text: "("
}
tokens {
  kind: IDENTIFIER
  position {
    line: 15
    col: 8
    offset: 229
    end_line: 15
    end_col: 8
    end_offset: 229
  }
  text: "n"
}
tokens {
  kind: COLON
  position {
    line: 15
    col: 9
    offset: 230
    end_line: 15
    end_col: 9
    end_offset: 230
  }
  text: ":"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 15
    col: 11
    offset: 232
    end_line: 15
    end_col: 13
    end_offset: 234
  }
  text: "Int"
}
tokens {
  kind: ASSIGN
  position {
    line: 15
    col: 15
    offset: 236
    end_line: 15
    end_col: 15
    end_offset: 236
  }
  text: "="
}
tokens {
  kind: INT_LIT
  position {
    line: 15
    col: 17
    offset: 238
    end_line: 15
    end_col: 18
    end_offset: 239
  }
  text: "90"
}
tokens {
  kind: SEMICOLON
  position {
    line: 15
    col: 19
    offset: 240
    end_line: 15
    end_col: 19
    end_offset: 240
  }
  text: ";"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 15
    col: 21
    offset: 242
    end_line: 15
    end_col: 21
    end_offset: 242
  }
  text: "n"
}
tokens {
  kind: LESS
  position {
    line: 15
    col: 23
    offset: 244
    end_line: 15
    end_col: 23
    end_offset: 244
  }
  text: "<"
}
tokens {
  kind: INT_LIT
  position {
    line: 15
    col: 25
    offset: 246
    end_line: 15
    end_col: 27
    end_offset: 248
  }
  text: "100"
}
tokens {
  kind: SEMICOLON
  position {
    line: 15
    col: 28
    offset: 249
    end_line: 15
    end_col: 28
    end_offset: 249
  }
  text: ";"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 15
    col: 30
    offset: 251
    end_line: 15
    end_col: 30
    end_offset: 251
  }
  text: "n"
}
tokens {
  kind: ASSIGN
  position {
    line: 15
    col: 32
    offset: 253
    end_line: 15
    end_col: 32
    end_offset: 253
  }
  text: "="
}
tokens {
  kind: IDENTIFIER
  position {
    line: 15
    col: 34
    offset: 255
    end_line: 15
    end_col: 34
    end_offset: 255
  }
  text: "n"
}
tokens {
  kind: PLUS
  position {
    line: 15
    col: 36
    offset: 257
    end_line: 15
    end_col: 36
    end_offset: 257
  }
  text: "+"
}
tokens {
  kind: INT_LIT
  position {
    line: 15
    col: 38
    offset: 259
    end_line: 15
    end_col: 38
    end_offset: 259
  }
  text: "1"
}
tokens {
  kind: RPAREN
  position {
    line: 15
    col: 39
    offset: 260
    end_line: 15
    end_col: 39
    end_offset: 260
  }
  text: ")"
}
tokens {
  kind: LBRACE
  position {
    line: 15
    col: 41
    offset: 262
    end_line: 15
    end_col: 41
    end_offset: 262
  }
  text: "{"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 16
    col: 5
    offset: 268
    end_line: 16
    end_col: 12
    end_offset: 275
  }
  text: "printInt"
}
tokens {
  kind: LPAREN
  position {
    line: 16
    col: 13
    offset: 276
    end_line: 16
    end_col: 13
    end_offset: 276
  }
  text: "("
}
tokens {
  kind: IDENTIFIER
  position {
    line: 16
    col: 14
    offset: 277
    end_line: 16
    end_col: 14
    end_offset: 277
  }
  text: "n"
}
tokens {
  kind: RPAREN
  position {
    line: 16
    col: 15
    offset: 278
    end_line: 16
    end_col: 15
    end_offset: 278
  }
  text: ")"
}
tokens {
  kind: SEMICOLON
  position {
    line: 16
    col: 16
    offset: 279
    end_line: 16
    end_col: 16
    end_offset: 279
  }
  text: ";"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 17
    col: 5
    offset: 285
    end_line: 17
    end_col: 9
    end_offset: 289
  }
  text: "print"
}
tokens {
  kind: LPAREN
  position {
    line: 17
    col: 10
    offset: 290
    end_line: 17
    end_col: 10
    end_offset: 290
  }
  text: "("
}
tokens {
  kind: CHAR_LIT
  position {
    line: 17
    col: 11
    offset: 291
    end_line: 17
    end_col: 13
    end_offset: 293
  }
  text: "\' \'"
}
tokens {
  kind: RPAREN
  position {
    line: 17
    col: 14
    offset: 294
    end_line: 17
    end_col: 14
    end_offset: 294
  }
  text: ")"
}
tokens {
  kind: SEMICOLON
  position {
    line: 17
    col: 15
    offset: 295
    end_line: 17
    end_col: 15
    end_offset: 295
  }
  text: ";"
}
tokens {
  kind: IF
  position {
    line: 18
    col: 5
    offset: 301
    end_line: 18
    end_col: 6
    end_offset: 302
  }
  text: "if"
}
tokens {
  kind: LPAREN
  position {
    line: 18
    col: 8
    offset: 304
    end_line: 18
    end_col: 8
    end_offset: 304
  }
  text: "("
}
tokens {
  kind: IDENTIFIER
  position {
    line: 18
    col: 9
    offset: 305
    end_line: 18
    end_col: 15
    end_offset: 311
  }
  text: "isPrime"
}
tokens {
  kind: LPAREN
  position {
    line: 18
    col: 16
    offset: 312
    end_line: 18
    end_col: 16
    end_offset: 312
  }
  text: "("
}
tokens {
  kind: IDENTIFIER
  position {
    line: 18
    col: 17
    offset: 313
    end_line: 18
    end_col: 17
    end_offset: 313
  }
  text: "n"
}
tokens {
  kind: RPAREN
  position {
    line: 18
    col: 18
    offset: 314
    end_line: 18
    end_col: 18
    end_offset: 314
  }
  text: ")"
}
tokens {
  kind: RPAREN
  position {
    line: 18
    col: 19
    offset: 315
    end_line: 18
    end_col: 19
    end_offset: 315
  }
  text: ")"
}
tokens {
  kind: LBRACE
  position {
    line: 18
    col: 21
    offset: 317
    end_line: 18
    end_col: 21
    end_offset: 317
  }
  text: "{"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 19
    col: 9
    offset: 327
    end_line: 19
    end_col: 16
    end_offset: 334
  }
  text: "printInt"
}
tokens {
  kind: LPAREN
  position {
    line: 19
    col: 17
    offset: 335
    end_line: 19
    end_col: 17
    end_offset: 335
  }
  text: "("
}
tokens {
  kind: INT_LIT
  position {
    line: 19
    col: 18
    offset: 336
    end_line: 19
    end_col: 18
    end_offset: 336
  }
  text: "1"
}
tokens {
  kind: RPAREN
  position {
    line: 19
    col: 19
    offset: 337
    end_line: 19
    end_col: 19
    end_offset: 337
  }
  text: ")"
}
tokens {
  kind: SEMICOLON
  position {
    line: 19
    col: 20
    offset: 338
    end_line: 19
    end_col: 20
    end_offset: 338
  }
  text: ";"
}
tokens {
  kind: RBRACE
  position {
    line: 20
    col: 5
    offset: 344
    end_line: 20
    end_col: 5
    end_offset: 344
  }
  text: "}"
}
tokens {
  kind: ELSE
  position {
    line: 20
    col: 7
    offset: 346
    end_line: 20
    end_col: 10
    end_offset: 349
  }
  text: "else"
}
tokens {
  kind: LBRACE
  position {
    line: 20
    col: 12
    offset: 351
    end_line: 20
    end_col: 12
    end_offset: 351
  }
  text: "{"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 21
    col: 9
    offset: 361
    end_line: 21
    end_col: 16
    end_offset: 368
  }
  text: "printInt"
}
tokens {
  kind: LPAREN
  position {
    line: 21
    col: 17
    offset: 369
    end_line: 21
    end_col: 17
    end_offset: 369
  }
  text: "("
}
tokens {
  kind: INT_LIT
  position {
    line: 21
    col: 18
    offset: 370
    end_line: 21
    end_col: 18
    end_offset: 370
  }
  text: "0"
}
tokens {
  kind: RPAREN
  position {
    line: 21
    col: 19
    offset: 371
    end_line: 21
    end_col: 19
    end_offset: 371
  }
  text: ")"
}
tokens {
  kind: SEMICOLON
  position {
    line: 21
    col: 20
    offset: 372
    end_line: 21
    end_col: 20
    end_offset: 372
  }
  text: ";"
}
tokens {
  kind: RBRACE
  position {
    line: 22
    col: 5
    offset: 378
    end_line: 22
    end_col: 5
    end_offset: 378
  }
  text: "}"
}
tokens {
  kind: IDENTIFIER
  position {
    line: 23
    col: 5
    offset: 384
    end_line: 23
    end_col: 9
    end_offset: 388
  }
  text: "print"
}
tokens {
  kind: LPAREN
  position {
    line: 23
    col: 10
    offset: 389
    end_line: 23
    end_col: 10
    end_offset: 389
  }
  text: "("
}
tokens {
  kind: CHAR_LIT
  position {
    line: 23
    col: 11
    offset: 390
    end_line: 23
    end_col: 14
    end_offset: 393
  }
  text: "\'\\n\'"
}
tokens {
  kind: RPAREN
  position {
    line: 23
    col: 15
    offset: 394
    end_line: 23
    end_col: 15
    end_offset: 394
  }
  text: ")"
}
tokens {
  kind: SEMICOLON
  position {
    line: 23
    col: 16
    offset: 395
    end_line: 23
    end_col: 16
    end_offset: 395
  }
  text: ";"
}
tokens {
  kind: RBRACE
  position {
    line: 24
    col: 3
    offset: 399
    end_line: 24
    end_col: 3
    end_offset: 399
  }
  text: "}"
}
tokens {
  kind: RBRACE
  position {
    line: 25
    col: 1
    offset: 401
    end_line: 25
    end_col: 1
    end_offset: 401
  }
  text: "}"
}
